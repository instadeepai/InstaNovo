# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test on multiple Python versions and on multiple operating systems

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          pyproject-file: "pyproject.toml"
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync  --extra cpu --dev
      - name: Lint with pre-commit
        run: |
          pre-commit run --all-files -c .pre-commit-config.yaml
      - name: Test with pytest
        run: |
          uv run --frozen  pytest -v --alluredir=allure_results  --cov-report=html --cov  --random-order
          coverage report -m
      - name: Test notebooks on Linux
        if: runner.os != 'Windows' && github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          PYDEVD_DISABLE_FILE_VALIDATION=1 python -m ipykernel install --user --name instanovo
          uv run --frozen  pytest --nbmake "./notebooks"  --nbmake-kernel=instanovo --nbmake-timeout=10000
      - name: Test notebooks on Windows
        if: runner.os == 'Windows' && github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          $env:PYDEVD_DISABLE_FILE_VALIDATION=1; python -m ipykernel install --user --name instanovo
          uv run --frozen  pytest --nbmake "./notebooks"  --nbmake-kernel=instanovo --nbmake-timeout=10000
