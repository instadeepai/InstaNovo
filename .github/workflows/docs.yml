# Workflow name
name: Build and Deploy Documentation

# Triggers for the workflow
on:
  workflow_run:
    # Specify the workflow that must complete before this one runs
    workflows: ["Test, Lint, and Update Coverage Badge"]
    # Specify the branch the triggering workflow must run on
    branches: [main]
    # Specify the event type that triggers this workflow (when the other workflow is completed)
    types:
      - completed

# Define the jobs to run
jobs:
  deploy:
    # Define the runner environment
    runs-on: ubuntu-latest
    # Add a condition to only run this job if the triggering workflow was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    # Define the steps within the job
    steps:
      # Step 1: Checkout repository
      # This automatically checks out the code from the commit associated with the completed workflow_run event,
      # ensuring it includes any changes made by that workflow (like the coverage badge).
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # Specify the Python version

      # Step 3: Install uv package manager
      # Using curl to install uv and add uv to the system PATH
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # Step 4: Create and activate virtual environment using uv
      # uv automatically detects and uses the virtual environment in subsequent steps
      - name: Create virtual environment
        run: |
          uv venv
          echo "${{ github.workspace }}/.venv/bin" >> $GITHUB_PATH

      # Step 5: Install documentation dependencies using uv
      - name: Install dependencies
        run: uv sync --extra cpu --group docs # Install dependencies from the 'docs' group and 'cpu' extra

      # Step 6: Build the MkDocs site
      - name: Build the MkDocs site
        run: mkdocs build # Run the mkdocs build command

      # Step 7: Deploy the built site to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4 # Use the GitHub Pages deployment action
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Use the default GitHub token for authentication
          publish_dir: ./docs_public # Directory containing the built site (MkDocs default is './site')
