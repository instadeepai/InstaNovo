[build-system]
requires = ["setuptools>=69.1.1"]
build-backend = "setuptools.build_meta"

[project]
name = "instanovo"
authors = [
  {name = "Kevin Michael Eloff", email = "k.eloff@instadeep.com"},
  {name = "Jeroen Van Goey", email = "j.vangoey@instadeep.com"},
  {name = "Amandla Mabona", email = "a.mabona@instadeep.com"},
  {name = "Rachel Catzel", email = "r.catzel@instadeep.com"},
]
keywords = [
    "mass spectrometry",
    "bioinformatics",
    "machine learning",
    "deep learning",
    "transformer",
    "de novo peptide sequencing"
]
description = "InstaNovo enables diffusion-powered de novo peptide sequencing in large scale proteomics experiments"
requires-python = " >=3.10,<3.13"
license = "Apache-2.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dynamic = ["version", "readme"]
dependencies = [
    "datasets>=3.1.0",
    "gitpython>=3.1.44",
    "hydra-core>=1.3.2",
    "jaxtyping>=0.2.34",
    "jiwer>=3.0.5",
    "lightning>=2.5.1",
    "matchms>=0.28.1",
    "neptune>=1.13.0",
    "numpy>=2.0.2",
    "omegaconf>=2.3.0",
    "pandas>=2.2.3",
    "polars>=1.12.0",
    "pyteomics>=4.7.5",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "s3fs>=2024.9.0",
    "scikit-learn>=1.5.2",
    "spectrum-utils>=0.4.2",
    "tensorboard>=2.18.0",
    "tqdm>=4.67.0",
    "transfusion-asr>=0.1.0",
    "typer>=0.15.1",
]

[dependency-groups]
dev = [
    "allure-pytest>=2.13.5",
    "coverage>=7.6.4",
    "genbadge>=1.1.1",
    "gsutil>=5.31",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "jupyter>=1.1.1",
    "pip>=25.0.1",
    "pre-commit>=4.0.1",
    "pyopenms-viz>=0.1.5",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-html>=4.1.1",
    "pytest-mock>=3.14.0",
    "pytest-parallel>=0.1.1",
    "pytest-random-order>=1.1.1",
    "pytest-xdist>=3.6.1",
    "rich-codex>=1.2.7",
    "seaborn>=0.13.2",
    "testfixtures>=8.3.0",
    "tomli>=2.2.1",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-git-revision-date-plugin>=0.3.2",
    "mkdocs-include-markdown-plugin>=7.0.0",
    "mkdocs-material>=9.5.42",
    "mkdocs-pymdownx-material-extras>=2.6",
    "mkdocstrings>=0.26.2",
    "mkdocstrings-python>=1.12.2",
    "pymdown-extensions>=10.11.2",
]

# See https://docs.astral.sh/uv/guides/integration/pytorch/
[project.optional-dependencies]
cpu = [
    "torch>=2.4.1,<2.5",
]
cu124 = [
    "torch>=2.4.1,<2.5",
]


[tool.uv]
required-version = ">=0.6.5"
conflicts = [
  [
    { extra = "cpu" },
    { extra = "cu124" },
  ],
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
  { index = "pytorch-cu124", extra = "cu124", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[project.scripts]
instanovo = "instanovo.cli:instanovo_entrypoint"

[tool.setuptools]
include-package-data = true  # To use MANIFEST.in for including extra files

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }
version = { attr = "instanovo.__version__" }

[tool.setuptools.packages.find]
include = ["instanovo*"]

[tool.setuptools.package-data]
instanovo = ["py.typed"]

[tool.coverage.run]
source = ["instanovo"]
omit = ["*/__init__.py", "*_test.py"]

[tool.coverage.report]
omit = ["__init__.py", "*_test.py"]
exclude_lines = [
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:"]

[tool.coverage.html]
directory = "coverage"

[tool.codespell]
skip = "*.js,*.html,*.css, *.svg"
ignore-words-list = ["abck", "fOf", "te"]

[tool.mypy]
python_version = "3.10"
namespace_packages = true
incremental = false
cache_dir = ".mypy_cache"
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false
allow_redefinition = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
strict_optional = true
strict_equality = true
explicit_package_bases = true
follow_imports = "skip"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "T", "W"]
ignore = ["B008", "C901", "D100", "D103", "D104", "D105", "D107", "D417", "F722", "G004", "N812"]

[tool.ruff.lint.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257"

[tool.ruff.lint.per-file-ignores]
# Ignore `D104` (missing docstring) in all `__init__.py` files
"__init__.py" = ["D104"]
"*.ipynb" = ["T201"]  # Ignore T201 (`print` found) in Jupyter Notebooks

[project.urls]
Homepage = "https://github.com/instadeepai/InstaNovo"
Issues = "https://github.com/instadeepai/InstaNovo/issues"
documentation = "https://instadeepai.github.io/InstaNovo/"
