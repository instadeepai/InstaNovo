# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
default:
  image: python:3.8

stages:
  - sast
  - precommit
  - test
  - minimum_coverage
  - history_copy
  - generate_report
  - make_docs
  - deploy

variables:
  MIN_COVERAGE: 23

sast:
  stage: sast
  tags:
    - kao-k8s-runner
include:
  - template: Security/SAST.gitlab-ci.yml
precommit:
  stage: precommit
  tags:
    - kao-k8s-runner
  before_script:
    - /usr/local/bin/python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  script:
    - pre-commit run --all-files -c .pre-commit-config.yaml # This won't run the check on commit msg, we need to add one step
    - echo $(git log -1 --pretty=%s --no-merges) > current_commit_msg
    # - pre-commit run --hook-stage commit-msg --commit-msg-filename current_commit_msg -c
    #   .pre-commit-config.yaml

run_tests:
  stage: test
  cache:
    - key:
        files:
          - instanovo_yeast.pt
      paths:
        - checkpoints/
    - key:
        files:
          - chart.npy
          - masses.npy
      paths:
        - checkpoints/knapsack/
  tags:
    - kao-k8s-runner
  artifacts:
    when: always
    paths:
      - allure_results
      - coverage
      - coverage.json
    expire_in: 1 day
  before_script:
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  script:
    - pytest -v --alluredir=allure_results  --cov-report=html --cov  --cov-config=.coveragerc
      --random-order
  after_script:
    - coverage report -m
    - coverage json
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  allow_failure: true

minimum_coverage:
  stage: minimum_coverage
  tags:
    - kao-k8s-runner
  before_script:
    - apt-get update && apt-get install jq -y
  script:
    - jsonStr="$(cat $CI_PROJECT_DIR/coverage.json)"
    - coverage="$(echo $jsonStr | jq .totals.percent_covered)"
    - if [[ $coverage < $MIN_COVERAGE ]] ; then echo "$coverage% of code coverage below threshold of
      $MIN_COVERAGE%" && exit 1 ; else exit 0 ; fi
  needs:
    - job: run_tests
  allow_failure: true

history_copy:
  stage: history_copy
  tags:
    - kao-k8s-runner
  artifacts:
    when: always
    paths:
      - allure_results
    expire_in: 1 day
  script:
    - curl -L -o artifacts.zip -H "PRIVATE-TOKEN:$DTU_DENOVO_SEQUENCING_CI_TOKEN"
      "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=pages"
    - unzip -o artifacts.zip -d artifacts
    - chmod -R 777 artifacts
    - mkdir ./allure_results/history
    - cp ./artifacts/public/allure/history/* ./allure_results/history
  allow_failure: true
  needs:
    - job: run_tests

generate_report:
  stage: generate_report
  tags:
    - kao-k8s-runner
  image: frankescobar/allure-docker-service
  script:
    - allure generate -c allure_results -o allure-report
  artifacts:
    paths:
      - ./allure-results
      - ./allure-report
    expire_in: 1 day
  needs:
    - job: run_tests

make_docs:
  stage: make_docs
  tags:
    - kao-k8s-runner
  before_script:
    - /usr/local/bin/python -m pip install --upgrade pip
    - pip install -r requirements-dev.txt
    - git config --global --add safe.directory "$(dirname "$(pwd)")"
  script:
    - rm -rf docs/reference
    - python ./docs/gen_ref_nav.py
    - mkdocs build --verbose --site-dir docs_public
  artifacts:
    paths:
      - docs_public

pages:
  stage: deploy
  tags:
    - kao-k8s-runner
  before_script:
    - /usr/local/bin/python -m pip install --upgrade pip
    - pip install -r requirements-dev.txt
    - git config --global --add safe.directory "$(dirname "$(pwd)")"
  script:
    - mkdocs build --verbose
    - mkdir -p public/allure
    - cp -r ./allure-report/* public/allure
    - mkdir -p public/coverage
    - cp -r ./coverage/* public/coverage
  artifacts:
    paths:
      - public
    expire_in: never
  needs:
    - job: generate_report
    - job: run_tests
